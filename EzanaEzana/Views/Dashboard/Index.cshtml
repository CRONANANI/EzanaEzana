@using EzanaEzana.ViewModels
@model DashboardViewModel
@{
    ViewData["Title"] = "Investment Dashboard";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-start">
                <div class="ezana-animate-fade-in">
                    <h1 class="display-4 fw-bold text-primary mb-3">
                        Welcome back, @Model.FirstName! ðŸ‘‹
                    </h1>
                    <p class="lead text-muted-foreground mb-0">
                        Here's your personalized investment overview and smart recommendations.
                    </p>
                </div>
                <div class="ezana-animate-fade-in">
                    <a asp-controller="Auth0" asp-action="Logout" class="btn btn-outline-danger d-flex align-items-center gap-2" style="font-weight: 500; padding: 0.75rem 1.5rem; border-radius: 0.5rem; transition: all 0.2s ease; box-shadow: var(--ezana-shadow-sm);" onmouseover="this.style.backgroundColor='var(--bs-danger)'; this.style.color='white'; this.style.transform='translateY(-2px)'; this.style.boxShadow='var(--ezana-shadow-md)'" onmouseout="this.style.backgroundColor='transparent'; this.style.color='var(--bs-danger)'; this.style.transform='translateY(0)'; this.style.boxShadow='var(--ezana-shadow-sm)'">
                        <i class="bi bi-box-arrow-right"></i>
                        Sign Out
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- React Dashboard Component -->
    <div id="react-dashboard-root"></div>

    <!-- Original Dashboard Content (can be hidden or removed later) -->
    <div class="row mb-4" style="display: none;">
        <div class="col-12">
            <div class="shadcn-card">
                <div class="p-4 border-b border-border bg-muted">
                    <h5 class="card-title mb-0 text-foreground">Investment Recommendations</h5>
                </div>
                <div class="p-6">
                    @if (Model.InvestmentRecommendations.TryGetValue("message", out var messageObj) && messageObj is string message)
                    {
                        <p>@message</p>
                    }

                    @if (Model.InvestmentRecommendations.TryGetValue("recommendations", out var recObj) && recObj is List<Dictionary<string, object>> recommendations && recommendations.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="bg-muted">
                                    <tr>
                                        <th class="text-foreground">Type</th>
                                        <th class="text-foreground">Name</th>
                                        <th class="text-end text-foreground">Allocation</th>
                                        <th class="text-foreground">Risk Level</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var rec in recommendations)
                                    {
                                        <tr>
                                            <td class="text-foreground">@(rec.TryGetValue("type", out var typeObj) ? typeObj.ToString() : "")</td>
                                            <td class="text-foreground">@(rec.TryGetValue("name", out var nameObj) ? nameObj.ToString() : "")</td>
                                            <td class="text-end text-foreground">@(rec.TryGetValue("allocation", out var alloc1) ? $"{Convert.ToDecimal(alloc1)}%" : "0%")</td>
                                            <td class="text-foreground">@(rec.TryGetValue("risk", out var riskObj) ? riskObj.ToString() : "")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else if (Model.InvestmentRecommendations.TryGetValue("defaultRecommendations", out var defaultRecObj) && defaultRecObj is List<Dictionary<string, object>> defaultRecs && defaultRecs.Any())
                    {
                        <div class="p-4 bg-accent text-accent-foreground rounded-lg mb-3">
                            You haven't set your investment preferences yet. <a asp-action="InvestmentPreferences" class="text-primary fw-bold">Set your preferences</a> to get personalized recommendations.
                        </div>

                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="bg-muted">
                                    <tr>
                                        <th class="text-foreground">Type</th>
                                        <th class="text-foreground">Name</th>
                                        <th class="text-end text-foreground">Allocation</th>
                                        <th class="text-foreground">Risk Level</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var rec in defaultRecs)
                                    {
                                        <tr>
                                            <td class="text-foreground">@(rec.TryGetValue("type", out var typeObj) ? typeObj.ToString() : "")</td>
                                            <td class="text-foreground">@(rec.TryGetValue("name", out var nameObj) ? nameObj.ToString() : "")</td>
                                            <td class="text-end text-foreground">@(rec.TryGetValue("allocation", out var alloc2) ? $"{Convert.ToDecimal(alloc2)}%" : "0%")</td>
                                            <td class="text-foreground">@(rec.TryGetValue("risk", out var riskObj) ? riskObj.ToString() : "")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="p-4 bg-warning-100 text-warning-800 rounded-lg">
                            No investment recommendations available. <a asp-action="InvestmentPreferences" class="text-warning-600 fw-bold">Set your investment preferences</a> to get personalized recommendations.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4" style="display: none;">
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-header bg-secondary text-white">
                    <h5 class="card-title mb-0">Portfolio Allocation</h5>
                </div>
                <div class="card-body">
                    @if (Model.PortfolioAllocation.TryGetValue("allocation", out var portfolioAlloc) && portfolioAlloc is Dictionary<string, decimal> allocation && allocation.Any())
                    {
                        <div class="mb-3">
                            @foreach (var item in allocation)
                            {
                                if (item.Value > 0)
                                {
                                    var color = item.Key switch
                                    {
                                        "Stocks" => "bg-primary",
                                        "Bonds" => "bg-success",
                                        "Cash" => "bg-info",
                                        "Alternative" => "bg-warning",
                                        _ => "bg-secondary"
                                    };
                                    <div class="mb-2">
                                        <div class="d-flex justify-content-between mb-1">
                                            <span>@item.Key</span>
                                            <span>@item.Value.ToString("0.##")%</span>
                                        </div>
                                        <div class="progress" style="height: 20px;">
                                            <div class="progress-bar @color" role="progressbar" style="width: @(item.Value.ToString("0.##"))%;" aria-valuenow="@item.Value" aria-valuemin="0" aria-valuemax="100">@item.Value.ToString("0.##")%</div>
                                        </div>
                                    </div>
                                }
                            }
                        </div>

                        <div class="mt-4">
                            @if (Model.PortfolioAllocation.TryGetValue("riskTolerance", out var riskObj) && riskObj is int risk)
                            {
                                <div class="mb-2">
                                    <div class="d-flex justify-content-between mb-1">
                                        <span>Risk Tolerance</span>
                                        <span>@risk/10</span>
                                    </div>
                                    <div class="progress" style="height: 10px;">
                                        <div class="progress-bar bg-danger" role="progressbar" style="width: @((risk * 10).ToString())%;" aria-valuenow="@risk" aria-valuemin="0" aria-valuemax="10"></div>
                                    </div>
                                </div>
                            }

                            @if (Model.PortfolioAllocation.TryGetValue("investmentHorizon", out var horizonObj) && horizonObj is string horizon)
                            {
                                <div class="mb-2">
                                    <strong>Investment Horizon:</strong> @horizon
                                </div>
                            }

                            @if (Model.PortfolioAllocation.TryGetValue("investmentGoals", out var goalsObj) && goalsObj is string goals)
                            {
                                <div>
                                    <strong>Investment Goals:</strong> @goals
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            No portfolio allocation data available. <a asp-action="InvestmentPreferences" class="alert-link">Set your investment preferences</a> to see your portfolio allocation.
                        </div>
                    }
                </div>
                <div class="card-footer">
                    <a asp-action="InvestmentPreferences" class="btn btn-primary">Update Investment Preferences</a>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-header bg-primary text-white">
                    <h5 class="card-title mb-0">Quick Actions</h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-3">
                        <a asp-action="InvestmentPreferences" class="btn btn-lg btn-outline-success">
                            <i class="bi bi-gear"></i> Update Investment Preferences
                        </a>
                        <a asp-controller="Investments" asp-action="Index" class="btn btn-lg btn-outline-primary">
                            <i class="bi bi-graph-up"></i> View My Investments
                        </a>
                        <a asp-controller="Investments" asp-action="MarketOverview" class="btn btn-lg btn-outline-secondary">
                            <i class="bi bi-bar-chart"></i> Market Overview
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- React Dashboard Bundle -->
    <script src="~/js/dist/dashboard.bundle.js"></script>
} 