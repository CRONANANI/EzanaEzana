"use strict";(self.webpackChunkezanaezana=self.webpackChunkezanaezana||[]).push([[98],{96098:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   K: () => (/* binding */ apiService)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(33319);\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(90888);\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }\nfunction _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\n\n\n\n// Types\n\n// API Configuration\nvar API_BASE_URL =  true ? \'https://api.ezana.com\' : 0;\nvar ApiService = /*#__PURE__*/function () {\n  function ApiService() {\n    _classCallCheck(this, ApiService);\n    _defineProperty(this, "api", void 0);\n    this.api = axios__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .A.create({\n      baseURL: API_BASE_URL,\n      timeout: 10000,\n      headers: {\n        \'Content-Type\': \'application/json\'\n      }\n    });\n    this.setupInterceptors();\n  }\n  return _createClass(ApiService, [{\n    key: "setupInterceptors",\n    value: function setupInterceptors() {\n      var _this = this;\n      // Request interceptor\n      this.api.interceptors.request.use(function (config) {\n        var token = _this.getAuthToken();\n        if (token && config.headers) {\n          config.headers.Authorization = "Bearer ".concat(token);\n        }\n        return config;\n      }, function (error) {\n        return Promise.reject(error);\n      });\n\n      // Response interceptor\n      this.api.interceptors.response.use(function (response) {\n        return response;\n      }, function (error) {\n        _this.handleApiError(error);\n        return Promise.reject(error);\n      });\n    }\n  }, {\n    key: "getAuthToken",\n    value: function getAuthToken() {\n      // Try to get token from localStorage first (for React frontend)\n      var token = localStorage.getItem(\'auth_token\');\n\n      // If not found, try to get from cookies (for traditional auth)\n      if (!token) {\n        var cookies = document.cookie.split(\';\');\n        var authCookie = cookies.find(function (cookie) {\n          return cookie.trim().startsWith(\'auth_token=\');\n        });\n        if (authCookie) {\n          token = authCookie.split(\'=\')[1];\n        }\n      }\n      return token;\n    }\n  }, {\n    key: "handleApiError",\n    value: function handleApiError(error) {\n      if (error.response) {\n        var _error$response = error.response,\n          status = _error$response.status,\n          data = _error$response.data;\n        switch (status) {\n          case 401:\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_0__/* .toast */ .oR.error(\'Authentication required. Please log in again.\');\n            this.handleUnauthorized();\n            break;\n          case 403:\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_0__/* .toast */ .oR.error(\'Access denied. You don\\\'t have permission for this action.\');\n            break;\n          case 404:\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_0__/* .toast */ .oR.error(\'Resource not found.\');\n            break;\n          case 422:\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_0__/* .toast */ .oR.error(\'Validation error. Please check your input.\');\n            break;\n          case 500:\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_0__/* .toast */ .oR.error(\'Server error. Please try again later.\');\n            break;\n          default:\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_0__/* .toast */ .oR.error(\'An unexpected error occurred.\');\n        }\n      } else if (error.request) {\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_0__/* .toast */ .oR.error(\'Network error. Please check your connection.\');\n      } else {\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_0__/* .toast */ .oR.error(\'An error occurred while processing your request.\');\n      }\n    }\n  }, {\n    key: "handleUnauthorized",\n    value: function handleUnauthorized() {\n      localStorage.removeItem(\'auth_token\');\n      // Redirect to login page\n      window.location.href = \'/Auth/Login\';\n    }\n\n    // Generic request methods\n  }, {\n    key: "get",\n    value: function () {\n      var _get = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(url, params) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return this.api.get(url, {\n                params: params\n              });\n            case 3:\n              response = _context.sent;\n              return _context.abrupt("return", response.data);\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context["catch"](0);\n              throw _context.t0;\n            case 10:\n            case "end":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n      function get(_x, _x2) {\n        return _get.apply(this, arguments);\n      }\n      return get;\n    }()\n  }, {\n    key: "post",\n    value: function () {\n      var _post = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(url, data) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return this.api.post(url, data);\n            case 3:\n              response = _context2.sent;\n              return _context2.abrupt("return", response.data);\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2["catch"](0);\n              throw _context2.t0;\n            case 10:\n            case "end":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n      function post(_x3, _x4) {\n        return _post.apply(this, arguments);\n      }\n      return post;\n    }()\n  }, {\n    key: "put",\n    value: function () {\n      var _put = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(url, data) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return this.api.put(url, data);\n            case 3:\n              response = _context3.sent;\n              return _context3.abrupt("return", response.data);\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3["catch"](0);\n              throw _context3.t0;\n            case 10:\n            case "end":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 7]]);\n      }));\n      function put(_x5, _x6) {\n        return _put.apply(this, arguments);\n      }\n      return put;\n    }()\n  }, {\n    key: "delete",\n    value: function () {\n      var _delete2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(url) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return this.api["delete"](url);\n            case 3:\n              response = _context4.sent;\n              return _context4.abrupt("return", response.data);\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4["catch"](0);\n              throw _context4.t0;\n            case 10:\n            case "end":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[0, 7]]);\n      }));\n      function _delete(_x7) {\n        return _delete2.apply(this, arguments);\n      }\n      return _delete;\n    }() // Authentication endpoints\n  }, {\n    key: "login",\n    value: function () {\n      var _login = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(credentials) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return this.api.post(\'/api/auth/login\', credentials);\n            case 2:\n              response = _context5.sent;\n              if (response.data.success && response.data.token) {\n                localStorage.setItem(\'auth_token\', response.data.token);\n              }\n              return _context5.abrupt("return", response.data);\n            case 5:\n            case "end":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function login(_x8) {\n        return _login.apply(this, arguments);\n      }\n      return login;\n    }()\n  }, {\n    key: "register",\n    value: function () {\n      var _register = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(userData) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return this.api.post(\'/api/auth/register\', userData);\n            case 2:\n              response = _context6.sent;\n              if (response.data.success && response.data.token) {\n                localStorage.setItem(\'auth_token\', response.data.token);\n              }\n              return _context6.abrupt("return", response.data);\n            case 5:\n            case "end":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function register(_x9) {\n        return _register.apply(this, arguments);\n      }\n      return register;\n    }()\n  }, {\n    key: "logout",\n    value: function () {\n      var _logout = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return this.post(\'/api/auth/logout\');\n            case 3:\n              _context7.prev = 3;\n              localStorage.removeItem(\'auth_token\');\n              return _context7.finish(3);\n            case 6:\n            case "end":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[0,, 3, 6]]);\n      }));\n      function logout() {\n        return _logout.apply(this, arguments);\n      }\n      return logout;\n    }() // Investment endpoints\n  }, {\n    key: "getInvestments",\n    value: function () {\n      var _getInvestments = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(params) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return this.get(\'/api/investments\', params);\n            case 2:\n              response = _context8.sent;\n              return _context8.abrupt("return", _objectSpread(_objectSpread({}, response), {}, {\n                pagination: {\n                  page: (params === null || params === void 0 ? void 0 : params.page) || 1,\n                  pageSize: (params === null || params === void 0 ? void 0 : params.pageSize) || 10,\n                  totalCount: response.data.length,\n                  totalPages: Math.ceil(response.data.length / ((params === null || params === void 0 ? void 0 : params.pageSize) || 10))\n                }\n              }));\n            case 4:\n            case "end":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function getInvestments(_x0) {\n        return _getInvestments.apply(this, arguments);\n      }\n      return getInvestments;\n    }()\n  }, {\n    key: "getInvestmentById",\n    value: function () {\n      var _getInvestmentById = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(id) {\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              return _context9.abrupt("return", this.get("/api/investments/".concat(id)));\n            case 1:\n            case "end":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function getInvestmentById(_x1) {\n        return _getInvestmentById.apply(this, arguments);\n      }\n      return getInvestmentById;\n    }()\n  }, {\n    key: "searchInvestments",\n    value: function () {\n      var _searchInvestments = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee0(query) {\n        return _regeneratorRuntime().wrap(function _callee0$(_context0) {\n          while (1) switch (_context0.prev = _context0.next) {\n            case 0:\n              return _context0.abrupt("return", this.get(\'/api/investments/search\', {\n                q: query\n              }));\n            case 1:\n            case "end":\n              return _context0.stop();\n          }\n        }, _callee0, this);\n      }));\n      function searchInvestments(_x10) {\n        return _searchInvestments.apply(this, arguments);\n      }\n      return searchInvestments;\n    }() // Portfolio endpoints\n  }, {\n    key: "getPortfolios",\n    value: function () {\n      var _getPortfolios = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee1() {\n        return _regeneratorRuntime().wrap(function _callee1$(_context1) {\n          while (1) switch (_context1.prev = _context1.next) {\n            case 0:\n              return _context1.abrupt("return", this.get(\'/api/portfolios\'));\n            case 1:\n            case "end":\n              return _context1.stop();\n          }\n        }, _callee1, this);\n      }));\n      function getPortfolios() {\n        return _getPortfolios.apply(this, arguments);\n      }\n      return getPortfolios;\n    }()\n  }, {\n    key: "getPortfolioById",\n    value: function () {\n      var _getPortfolioById = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(id) {\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              return _context10.abrupt("return", this.get("/api/portfolios/".concat(id)));\n            case 1:\n            case "end":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function getPortfolioById(_x11) {\n        return _getPortfolioById.apply(this, arguments);\n      }\n      return getPortfolioById;\n    }()\n  }, {\n    key: "createPortfolio",\n    value: function () {\n      var _createPortfolio = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11(data) {\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              return _context11.abrupt("return", this.post(\'/api/portfolios\', data));\n            case 1:\n            case "end":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n      function createPortfolio(_x12) {\n        return _createPortfolio.apply(this, arguments);\n      }\n      return createPortfolio;\n    }()\n  }, {\n    key: "updatePortfolio",\n    value: function () {\n      var _updatePortfolio = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12(id, data) {\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              return _context12.abrupt("return", this.put("/api/portfolios/".concat(id), data));\n            case 1:\n            case "end":\n              return _context12.stop();\n          }\n        }, _callee12, this);\n      }));\n      function updatePortfolio(_x13, _x14) {\n        return _updatePortfolio.apply(this, arguments);\n      }\n      return updatePortfolio;\n    }()\n  }, {\n    key: "deletePortfolio",\n    value: function () {\n      var _deletePortfolio = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13(id) {\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              return _context13.abrupt("return", this["delete"]("/api/portfolios/".concat(id)));\n            case 1:\n            case "end":\n              return _context13.stop();\n          }\n        }, _callee13, this);\n      }));\n      function deletePortfolio(_x15) {\n        return _deletePortfolio.apply(this, arguments);\n      }\n      return deletePortfolio;\n    }() // User endpoints\n  }, {\n    key: "getUserProfile",\n    value: function () {\n      var _getUserProfile = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              return _context14.abrupt("return", this.get(\'/api/user/profile\'));\n            case 1:\n            case "end":\n              return _context14.stop();\n          }\n        }, _callee14, this);\n      }));\n      function getUserProfile() {\n        return _getUserProfile.apply(this, arguments);\n      }\n      return getUserProfile;\n    }()\n  }, {\n    key: "updateUserProfile",\n    value: function () {\n      var _updateUserProfile = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15(data) {\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              return _context15.abrupt("return", this.put(\'/api/user/profile\', data));\n            case 1:\n            case "end":\n              return _context15.stop();\n          }\n        }, _callee15, this);\n      }));\n      function updateUserProfile(_x16) {\n        return _updateUserProfile.apply(this, arguments);\n      }\n      return updateUserProfile;\n    }()\n  }, {\n    key: "updateUserPreferences",\n    value: function () {\n      var _updateUserPreferences = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16(preferences) {\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              return _context16.abrupt("return", this.put(\'/api/user/preferences\', preferences));\n            case 1:\n            case "end":\n              return _context16.stop();\n          }\n        }, _callee16, this);\n      }));\n      function updateUserPreferences(_x17) {\n        return _updateUserPreferences.apply(this, arguments);\n      }\n      return updateUserPreferences;\n    }() // Utility methods\n  }, {\n    key: "isAuthenticated",\n    value: function isAuthenticated() {\n      return !!this.getAuthToken();\n    }\n  }, {\n    key: "getAuthHeaders",\n    value: function getAuthHeaders() {\n      var token = this.getAuthToken();\n      return token ? {\n        Authorization: "Bearer ".concat(token)\n      } : {};\n    }\n\n    // Token management\n  }, {\n    key: "setAuthToken",\n    value: function setAuthToken(token) {\n      localStorage.setItem(\'auth_token\', token);\n    }\n  }, {\n    key: "clearAuthToken",\n    value: function clearAuthToken() {\n      localStorage.removeItem(\'auth_token\');\n    }\n  }]);\n}(); // Export singleton instance\nvar apiService = new ApiService();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///96098\n')}}]);